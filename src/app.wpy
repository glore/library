<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
//  import http from './mixins/http.js'
  import {service} from './config.js'

  var ga = require('./ga.js')
  var GoogleAnalytics = ga.GoogleAnalytics
  var HitBuilders = ga.HitBuilders

  export default class extends wepy.app {
    config = {
      pages: [
        // tab-bar
        'pages/home',
        'pages/map',
        'pages/collect',
        'pages/qr',
        'pages/borrow',
        'pages/user'
      ],
      'permission': {
        'scope.userLocation': {
          'desc': '你的位置信息将用于小程序位置接口的效果展示'
        }
      },
      'subPackages': [
        {
          'root': 'pages/main',
          'pages': [
            // 首页
            'search',
            'list',
            'detail'
          ]
        },
        {
          'root': 'pages/book',
          'pages': [
            // 图书
            'comment',
            'comments',
            'list',
            'listV2',
            'detail',
            'unpage'
          ]
        },
        {
          'root': 'pages/library',
          'pages': [
            // 图书馆管理
            'library',
            'shareLibrary',
            'shareLibrary523V2',
            'searchLibrary',
            'borrow',
            'usercollect',
            'members',
            'borrows',
            'book',
            'book_edit',
            'sorts',
            'sorts_list',
            'sort',
            'create'
          ]
        },
        {
          'root': 'pages/borrow',
          'pages': [
            'subscribe',
            'result'
          ]
        },
        {
          'root': 'pages/user',
          'pages': [
            // 我的
            'register',
            'registerV2',
            'follower',
            'booklist',
            'myLibrary',
            'borrow',
            'borrows',
            'return',
            'cash',
            'wallet',
            'walletHistories',
            'subscribe'
          ]
        }
      ],
      window: {
        navigationBarTitleText: '友福图书馆',
        navigationBarTextStyle: 'white',
        navigationBarBackgroundColor: '#005b9e',
        backgroundColor: '#eaeaea',
        backgroundTextStyle: 'light',
        enablePullDownRefresh: true
      },
      tabBar: {
        color: '#707070',
        selectedColor: '#005b9e',
        backgroundColor: '#fff',
        borderStyle: 'black',
        list: [{
          pagePath: 'pages/home',
          selectedIconPath: './images/tabbars/home1.png',
          iconPath: './images/tabbars/home1.png',
          text: '首页'
//        },
//          {
//          pagePath: 'pages/collect',
//          selectedIconPath: './images/tabbars/icon-book-active.png',
//          iconPath: './images/tabbars/icon-book.png',
//          text: '藏书'
//        }, {
//          pagePath: 'pages/qr',
//          selectedIconPath: './images/tabbars/icon-qrv.png',
//          iconPath: './images/tabbars/icon-qrv.png',
//          text: '扫码'
          /* }, {
            pagePath: 'pages/party',
            selectedIconPath: './images/tabbars/icon-shelf-active@2x.png',
            iconPath: './images/tabbars/icon-shelf@2x.png',
            text: '聚会' */
        }, {
          pagePath: 'pages/borrow',
          selectedIconPath: './images/tabbars/libv.png',
          iconPath: './images/tabbars/libv.png',
          text: '全部图书馆'
        }, {
          pagePath: 'pages/user',
          selectedIconPath: './images/tabbars/my.png',
          iconPath: './images/tabbars/my.png',
          text: '我的'
        }]
      },
      networkTimeout: {
        request: 5000,
        downloadFile: 10000
      },
      debug: true
    }
    globalData = {
      user: null,
      cart: null,
      tracker: null
    }

    constructor() {
      super()
      this.use('requestfix')
    }

    onLaunch(options) {
      console.log(options)
//      if (options.scene == 1037 || options.scene == 1038) {
//        let uid = options.referrerInfo.extraData.uid
//      console.log(JSON.stringify(uid))
//        wx.setStorageSync('uid', uid)
//        wepy.login({
//          success: (res) => {
//            let code = res.code
//            let data = {
//              wechat_code: code
//            }
//            wx.request({
//              url: service.register_infor,
//              header: {
//                'Content-Type': 'application/x-www-form-urlencoded'
//              },
//              method: 'get',
//              data: data,
//              success: function (res) {
//                let isRegister = res.data.data.is_register
//                if (isRegister == 1) {
//                  wepy.login({
//                    success: (res) => {
//                      let codeV = res.code
//                      wx.request({
//                        url: service.skip + '/infor',
//                        header: {'Content-Type': 'application/x-www-form-urlencoded'},
//                        method: 'get',
//                        data: {
//                          wechat_code: codeV,
//                          uid: uid
//                        },
//                        success: function (res) {
//                          let token = res.data.data.access_token
//                          wx.setStorageSync('token', token)
//                          console.log('success')
//                          console.log(res)
//                        }
//                      })
//                    },
//                    fail: (res) => {
//                      console.log('wepy.login.fail:', res)
//                    }
//                  })
//                } else {
//                  wepy.getUserInfo({
//                    success: (res) => {
//                      let iv = res.iv
//                      let encryptedData = res.encryptedData
//                      wepy.login({
//                        success: (res) => {
//                          let codeV = res.code
//                          wx.request({
//                            url: service.skip,
//                            header: {'Content-Type': 'application/x-www-form-urlencoded'},
//                            method: 'get',
//                            data: {
//                              wechat_code: codeV,
//                              uid: uid,
//                              iv: iv,
//                              encryptedData: encryptedData
//                            },
//                            success: function (res) {
//                              let token = res.data.data.access_token
//                              wx.setStorageSync('token', token)
//                              console.log('success')
//                              console.log(res)
//                            }
//                          })
//                        },
//                        fail: (res) => {
//                          console.log('wepy.login.fail:', res)
//                        }
//                      })
//                    },
//                    fail: (res) => {
//                    }
//                  })
//                }
//              }
//            })
//          },
//          fail: (res) => {
//            console.log('wepy.login.fail:', res)
//          }
//        })
//      }
    }

    onShow(options) {
//      let that = this
      if (options.scene == 1044) {
        wx.getShareInfo({
          shareTicket: options.shareTicket,
          success: function (res) {
            let encryptedData = res.encryptedData
            let iv = res.iv
            let code = ''
            wepy.login({
              success: (res) => {
                code = res.code
                let data = {
                  code: code,
                  iv: iv,
                  encryptedData: encryptedData
                }
                console.log(service.infor)
                console.log(this)
                wx.request({
                  url: service.infor,
                  header: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                  },
                  method: 'POST',
                  data: data,
                  success: function (res) {
                    let data = res.data.data
                    console.log(data)
//                  debugger
                  }
                })
              },
              fail: (res) => {
                console.log('wepy.login.fail:', res)
              }
            })
          }
        })
      }
    }

    onShareAppMessage(title = '友福图书馆') {
      let that = this
      that.from_openid = wx.getStorageSync('openid')
      let pages = getCurrentPages()    // 获取加载的页面
      let currentPage = pages[pages.length - 1]    // 获取当前页面的对象
      let link = currentPage.route    // 当前页面url
      let libraryId = currentPage.options.library_id ? currentPage.options.library_id : ''
      let options = currentPage.options.id
      let id = options ? '?id=' + options : ''
      if (libraryId) {
        id = options ? '?id=' + options + '&library_id=' + libraryId : ''
      }
      let url = ''
      if (options) {
        url = link + id + '&from_openid=' + that.from_openid
      } else {
        url = link + '?from_openid=' + that.from_openid
      }
      console.log(url)
      return {
        title: title,
        path: url,
        success: function (res) {
          let shareTickets = res.shareTickets
          if (shareTickets.length == 0) {
            return false
          }
          wx.getShareInfo({
            shareTicket: shareTickets[0],
            success: function (res) {
              let encryptedData = res.encryptedData
              let iv = res.iv
              let code = ''
              wepy.login({
                success: (res) => {
                  code = res.code
                  let data = {
                    code: code,
                    iv: iv,
                    encryptedData: encryptedData
                  }
                  that.$post({url: service.infor, data}, {
                    success: ({code, data}) => {
                      that.openGid = data.openGId
                      that.$apply()
                    },
                    fail: ({code, data}) => {
                    },
                    complete: () => {
                      this.loading = false
                    }
                  })
                },
                fail: (res) => {
                  console.log('wepy.login.fail:', res)
                }
              })
            }
          })
          wx.showToast({
            title: '转发成功',
            icon: 'success',
            duration: 1500

          })
        },
        fail: function (res) {
          // 转发失败
          console.log(res.errMsg)
        }
      }
    }

    /* ============= 工具方法（app没法用mixins，就再写一遍了） ============= */
    isObject(item) {
      return typeof item === 'object' && !this.isArray(item)
    }

    isArray(item) {
      return Object.prototype.toString.apply(item) === '[object Array]'
    }

    isUndefined(item) {
      return typeof item === 'undefined'
    }

    // Google analytics
    getTracker(name, text) {
      if (!this.globalData.tracker) {
        // 初始化GoogleAnalytics Tracker
        this.globalData.tracker = GoogleAnalytics.getInstance(this)
          .setAppName('友福图书馆')
          .setAppVersion('v0.4')
          .newTracker('UA-109097480-1')
      }
      var t = this.globalData.tracker
      t.setScreenName(text)
      t.send(new HitBuilders.ScreenViewBuilder().build())
    }

    /* ========================= 更新缓存信息 ======================== */
    $updateGlobalData(name, obj) {
      // 校验: globalData
      if (!this.globalData) return
      // 校验: 操作字段
      if (typeof name !== 'string' || name === '') return {}
      // 取已有信息
      const info = this.globalData[name] || {}
      // 更新缓存
      if (obj && this.isObject(obj)) {
        // Object合并第一层
        this.globalData[name] = Object.assign({}, info, obj)
      } else if (!this.isUndefined(obj)) {
        // 其他非undefined数据直接覆盖
        this.globalData[name] = obj
      }
      this.$apply && this.$apply()
      console.info(`[${obj ? 'UPDATE' : 'GET'} GlobalData ${name}]:`, this.globalData[name])
      return this.globalData[name]
    }
  }
</script>
<style lang="less">
@import "./styles/weui/index.less";
@import "./styles/custom/index.less";
</style>
